<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://blog.jez.io/feed/debugging.xml" rel="self" type="application/atom+xml" /><link href="https://blog.jez.io/" rel="alternate" type="text/html" /><updated>2025-04-14T18:06:42-04:00</updated><id>https://blog.jez.io/feed/debugging.xml</id><title type="html">Jake Zimmerman | Debugging</title><subtitle>A collection of blog posts about programming, software, types, programming languages, Sorbet, Vim, Markdown, and more.</subtitle><author><name>Jake Zimmerman</name></author><entry><title type="html">Approximating strace with Instruments.app</title><link href="https://blog.jez.io/instruments-app-strace/" rel="alternate" type="text/html" title="Approximating strace with Instruments.app" /><published>2024-10-09T17:17:13-04:00</published><updated>2024-10-09T17:17:13-04:00</updated><id>https://blog.jez.io/instruments-app-strace</id><author><name>Jake Zimmerman</name></author><category term="debugging" /><category term="linux" /><category term="osx" /><summary type="html"><![CDATA[The other day I learned that Instruments.app can record file system activity on macOS!]]></summary></entry><entry><title type="html">Bug squash: An underrated interview question</title><link href="https://blog.jez.io/bugsquash/" rel="alternate" type="text/html" title="Bug squash: An underrated interview question" /><published>2024-08-17T18:26:24-04:00</published><updated>2024-08-17T18:26:24-04:00</updated><id>https://blog.jez.io/bugsquash</id><author><name>Jake Zimmerman</name></author><category term="debugging" /><category term="interviewing" /><category term="practices" /><summary type="html"><![CDATA[I love bug squash interviews.]]></summary></entry><entry><title type="html">perf, Rinse, Repeat: Making the Sorbet Compiler faster</title><link href="https://blog.jez.io/perf-rinse-repeat/" rel="alternate" type="text/html" title="perf, Rinse, Repeat: Making the Sorbet Compiler faster" /><published>2021-05-23T20:43:22-04:00</published><updated>2021-05-23T20:43:22-04:00</updated><id>https://blog.jez.io/perf-rinse-repeat</id><author><name>Jake Zimmerman</name></author><category term="ruby" /><category term="debugging" /><category term="sorbet-compiler" /><summary type="html"><![CDATA[TODO]]></summary></entry><entry><title type="html">Exploring Ruby with clangd</title><link href="https://blog.jez.io/clangd-ruby/" rel="alternate" type="text/html" title="Exploring Ruby with clangd" /><published>2020-07-21T18:40:23-04:00</published><updated>2020-07-21T18:40:23-04:00</updated><id>https://blog.jez.io/clangd-ruby</id><author><name>Jake Zimmerman</name></author><category term="ruby" /><category term="vim" /><category term="debugging" /><summary type="html"><![CDATA[I've managed to get LSP-based IDE features powered by clangd working for the Ruby VM's source code (in my case, in Vim). Here's how I did it!]]></summary></entry><entry><title type="html">Search Down the Stack</title><link href="https://blog.jez.io/search-down-the-stack/" rel="alternate" type="text/html" title="Search Down the Stack" /><published>2020-06-06T20:08:20-04:00</published><updated>2020-06-06T20:08:20-04:00</updated><id>https://blog.jez.io/search-down-the-stack</id><author><name>Jake Zimmerman</name></author><category term="fragment" /><category term="linux" /><category term="debugging" /><summary type="html"><![CDATA[I've found it useful to search though the source code of things lower in the stack lately.]]></summary></entry><entry><title type="html">Profiling in Haskell for a 10x Speedup</title><link href="https://blog.jez.io/profiling-in-haskell/" rel="alternate" type="text/html" title="Profiling in Haskell for a 10x Speedup" /><published>2019-05-19T15:13:34-04:00</published><updated>2019-05-19T15:13:34-04:00</updated><id>https://blog.jez.io/profiling-in-haskell</id><author><name>Jake Zimmerman</name></author><category term="haskell" /><category term="debugging" /><summary type="html"><![CDATA[I wrote up a toy project in Haskell and profiled it to learn about Haskell's profiling tools and about profiling code in general. Profiling in Haskell with Stack is super easy...]]></summary></entry></feed>